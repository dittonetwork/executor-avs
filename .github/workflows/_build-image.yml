name: Build Image

on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string
        description: Application that is supposed to be built and used as the entrypoint for the image.
      docker_tags:
        required: false
        type: string
        description: Tags to set for docker image.
      artifact_name:
        required: false
        type: string
        description: Name of the artifact to upload, leave empty to skip upload.

    secrets:
      dockerhub_username:
        required: false
      dockerhub_password:
        required: false

jobs:
  build-image:
    runs-on: ubuntu-latest
    env:
      dockerhub_username: ${{ secrets.dockerhub_username }}
      dockerhub_password: ${{ secrets.dockerhub_password }}
    steps:
      - name: Login to Docker Hub
        if: ${{ env.dockerhub_username != '' && env.dockerhub_password != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.dockerhub_username }}
          password: ${{ env.dockerhub_password }}

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          load: true # Loads the image into Docker daemon
          tags: ${{ inputs.docker_tags }}
          push: ${{ env.dockerhub_username != '' && env.dockerhub_password != '' }}
          build-args: |
            APP=${{ inputs.app }}

      - name: Save Docker image
        if: inputs.artifact_name != ''
        run: |
          arifact_name = "operator-image.tar.gz"
          docker save ditto-operator-avs:latest | gzip > ${arifact_name}
          echo "artifact-path=${arifact_name}" >> $GITHUB_OUTPUT

      # To load run `gunzip -c image.tar.gz | docker load`
      - name: Upload Docker image as artifact
        if: inputs.artifact_name != ''
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ steps.save_image.outputs.artifact-path }}
